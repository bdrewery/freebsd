#
# $FreeBSD$
#
# native-xtools is the current target for qemu-user cross builds of ports
# via poudriere and the imgact_binmisc kernel module.
# This target merely builds a toolchan/sysroot, then builds the tools it wants
# with the options it wants in a special MAKEOBJDIRPREFIX, using the toolchain
# already built.  It then installs the static tools to NXBDESTDIR for Poudriere
# to pickup.
#
NXBOBJROOT=	${OBJROOT}${MACHINE}.${MACHINE_ARCH}/nxb/
NXBOBJTOP=	${NXBOBJROOT}${TARGET}.${TARGET_ARCH}
NXTP?=		/nxb-bin
.if ${NXTP:N/*}
.error NXTP variable should be an absolute path
.endif
NXBDESTDIR?=	${DESTDIR}${NXTP}

# This is the list of tools to be built/installed as static and where
# appropriate to build for the given TARGET.TARGET_ARCH.
NXBDIRS+= \
    bin/cat \
    bin/chmod \
    bin/cp \
    ${_tcsh} \
    bin/echo \
    bin/expr \
    bin/hostname \
    bin/ln \
    bin/ls \
    bin/mkdir \
    bin/mv \
    bin/ps \
    bin/realpath \
    bin/rm \
    bin/rmdir \
    bin/sh \
    bin/sleep \
    sbin/md5 \
    sbin/sysctl \
    usr.bin/addr2line \
    usr.bin/ar \
    usr.bin/awk \
    usr.bin/basename \
    usr.bin/bmake \
    usr.bin/bzip2 \
    usr.bin/cmp \
    usr.bin/diff \
    usr.bin/dirname \
    usr.bin/elfcopy \
    usr.bin/env \
    usr.bin/fetch \
    usr.bin/find \
    usr.bin/grep \
    usr.bin/gzip \
    usr.bin/id \
    usr.bin/lex \
    usr.bin/limits \
    usr.bin/lorder \
    usr.bin/mandoc \
    usr.bin/mktemp \
    usr.bin/mt \
    usr.bin/nm \
    usr.bin/patch \
    usr.bin/readelf \
    usr.bin/sed \
    usr.bin/size \
    usr.bin/sort \
    usr.bin/strings \
    usr.bin/tar \
    usr.bin/touch \
    usr.bin/tr \
    usr.bin/true \
    usr.bin/uniq \
    usr.bin/unzip \
    usr.bin/xargs \
    usr.bin/xinstall \
    usr.bin/xz \
    usr.bin/yacc \
    usr.sbin/chown

.if ${MK_CLANG} != "no"
NXBDIRS+=	lib/clang
SUBDIR_DEPEND_usr.bin/clang=	lib/clang
NXBDIRS+=	usr.bin/clang
.elif ${MK_GCC} != "no"
NXBDIRS+=	gnu/usr.bin/cc
.endif
.if ${MK_BINUTILS} != "no"
NXBDIRS+=	gnu/usr.bin/binutils
.endif

NXBMAKEARGS+= \
	OBJTOP=${NXBOBJTOP:Q} \
	OBJROOT=${NXBOBJROOT:Q} \
	-DNO_SHARED \
	-DNO_CPU_CFLAGS \
	-DNO_PIC \
	SSP_CFLAGS= \
	MK_CLANG_EXTRAS=no \
	MK_CLANG_FULL=no \
	MK_CTF=no \
	MK_DEBUG_FILES=no \
	MK_GDB=no \
	MK_HTML=no \
	MK_LLDB=no \
	MK_MAN=no \
	MK_MAN_UTILS=yes \
	MK_OFED=no \
	MK_OPENSSH=no \
	MK_PROFILE=no \
	MK_SENDMAIL=no \
	MK_SVNLITE=no \
	MK_TESTS=no \
	MK_WARNS=no \
	MK_ZFS=no


# For 'toolchain' we want to produce native binaries that themselves generate
# native binaries.
NXBTMAKE=	${NXBMAKEENV} ${MAKE} ${NXBMAKEARGS:N-DNO_PIC:N-DNO_SHARED} \
		TARGET=${MACHINE} TARGET_ARCH=${MACHINE_ARCH}
# For 'everything' we want to produce native binaries (hence -target to
# be MACHINE) that themselves generate TARGET.TARGET_ARCH binaries.
# TARGET/TARGET_ARCH are still passed along from user.
NXBMAKE=	${NXBMAKEENV} ${MAKE} ${NXBMAKEARGS} \
		TARGET_TRIPLE=${MACHINE_TRIPLE:Q}
native-xtools: .PHONY
	# Build the bootstrap/host/cross tools that produce native binaries
	${_+_}cd ${.CURDIR}; ${NXBTMAKE} kernel-toolchain
	# Populate includes/libraries sysroot that produce native binaries.
	# This is split out from 'toolchain' above mostly so that target LLVM
	# libraries have a proper LLVM_DEFAULT_TARGET_TRIPLE without
	# polluting the cross-compiler build.  The LLVM/GCC libs are skipped
	# here to avoid the problem but are kept in 'toolchain' so that
	# needed build tools are built.
	${_+_}cd ${.CURDIR}; ${NXBTMAKE} _includes MK_CLANG=no MK_GCC=no
	${_+_}cd ${.CURDIR}; ${NXBTMAKE} _libraries MK_CLANG=no MK_GCC=no
.if !defined(NO_OBJWALK)
	${_+_}cd ${.CURDIR}; ${NXBMAKE} SUBDIR_OVERRIDE="${NXBDIRS:M*}" _obj
.endif
	${_+_}cd ${.CURDIR}; ${NXBMAKE} SUBDIR_OVERRIDE="${NXBDIRS:M*}" \
	    everything
	@echo ">> native-xtools done.  Use 'make native-xtools-install' to install to a given DESTDIR"

native-xtools-install: .PHONY
	mkdir -p ${NXBDESTDIR}/bin ${NXBDESTDIR}/sbin ${NXBDESTDIR}/usr
	mtree -deU -f ${.CURDIR}/etc/mtree/BSD.usr.dist \
	    -p ${NXBDESTDIR}/usr >/dev/null
	mtree -deU -f ${.CURDIR}/etc/mtree/BSD.include.dist \
	    -p ${NXBDESTDIR}/usr/include >/dev/null
	${_+_}cd ${.CURDIR}; ${NXBMAKE} -f Makefile.inc1 \
	    DESTDIR=${NXBDESTDIR} \
	    SUBDIR_OVERRIDE="${NXBDIRS:M*}" \
	    -DNO_ROOT \
	    install


